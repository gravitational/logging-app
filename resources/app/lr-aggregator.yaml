---
apiVersion: v1
kind: Service
metadata:
  name: lr-aggregator
  namespace: kube-system
  labels:
    app: lr-aggregator
spec:
  type: ClusterIP
  ports:
    - name: rpc
      protocol: TCP
      port: 9966
  selector:
    app: lr-aggregator

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lr-aggregator
  namespace: kube-system
  labels:
    app: lr-aggregator
data:
  logrange.json: |
    {
      "BaseDir": "/var/lib/gravity/logrange/data/",
      "HostHostId": 0,
      "HostLeaseTTLSec": 5,
      "HostRegisterTimeoutSec": 0,
      "PublicApiRpc": {
        "ListenAddr": "0.0.0.0:9966",
        "TlsEnabled": true,
        "Tls2Way": true,
        "TlsCertFile": "/var/state/logrange-aggregator.cert",
        "TlsKeyFile": "/var/state/logrange-aggregator.key",
        "TlsCAFile": "/var/state/root.cert"
      },
      "JrnlCtrlConfig": {
        "MaxOpenFileDescs": 500,
        "CheckFullScan": false,
        "RecoverDisabled": false,
        "RecoverLostDataOk": false,
        "WriteIdleSec": 120,
        "WriteFlushMs": 500,
        "MaxChunkSize": 5000000,
        "MaxRecordSize": 1048576
      },
      "PipesConfig": {
        "EnsureAtStart": [
          {
            "Name": "__default__",
            "TagsCond": "cname!=lr-aggregator"
          }
        ]
      }
    }
  log4g.properties: |
    # log4g configuration`
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: lr-aggregator
  namespace: kube-system
  labels:
    app: lr-aggregator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lr-aggregator
  template:
    metadata:
      labels:
        app: lr-aggregator
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      priorityClassName: system-cluster-critical
      securityContext:
        runAsUser: 0
        seLinuxOptions:
          type: gravity_container_logger_t
      nodeSelector:
        gravitational.io/k8s-role: master
      tolerations:
          - operator: "Exists"
      containers:
        - name: lr-aggregator
          image: "index.docker.io/logrange/logrange:v0.1.43"
          imagePullPolicy: Always
          ports:
            - name: rpc
              protocol: TCP
              containerPort: 9966
          volumeMounts:
            - name: config
              mountPath: /opt/logrange/config
            - name: extdockercontainers
              mountPath: /ext/docker/containers
            - name: varlibgravitylogrange
              mountPath: /var/lib/gravity/logrange
            - name: varlog
              mountPath: /var/log
            - name: varstate
              mountPath: /var/state
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 500Mi
              cpu: 500m
      volumes:
        - name: config
          configMap:
            name: lr-aggregator
        - name: extdockercontainers
          hostPath:
            path: /ext/docker/containers
        - name: varlibgravitylogrange
          hostPath:
            path: /var/lib/gravity/logrange
            type: DirectoryOrCreate
        - name: varlog
          hostPath:
            path: /var/log
        - name: varstate
          hostPath:
            path: /var/state
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: logrange.io/node
                    operator: Exists
              weight: 100
