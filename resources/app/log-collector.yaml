---
apiVersion: v1
kind: Service
metadata:
  name: log-collector
  namespace: kube-system
  labels:
    app: log-collector
spec:
  type: ClusterIP
  ports:
    - name: api
      protocol: TCP
      port: 8083
  selector:
    app: log-collector
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: log-collector
  namespace: kube-system
  labels:
    app: log-collector
data:
  adapter.json: |
    {
      "Gravity": {
        "ApiListenAddr": "0.0.0.0:8083",
        "Kubernetes": {
          "Namespace": "kube-system",
          "ForwarderConfigMapName": "log-forwarders"
        }
      },

      "Logrange": {
        "Partition": "logrange.pipe=__default__",
        "ForwarderTmplFile": "/opt/logrange/gravity/config/forward-tmpl.json",
        "CronQueries": [
          {
            "Query": "truncate maxdbsize 10gb",
            "PeriodSec": 60
          }
        ],
        "Kubernetes": {
          "Namespace": "kube-system",
          "ForwarderConfigMap": "lr-forwarder"
        },
        "Transport": {
          "ListenAddr": "lr-aggregator.kube-system.svc.cluster.local:9966",
          "TlsEnabled": true,
          "TlsCertFile": "/var/state/logrange-adaptor.cert",
          "TlsKeyFile": "/var/state/logrange-adaptor.key",
          "TlsCAFile": "/var/state/root.cert"
        }
      },

      "SyncIntervalSec": 20
    }

  forward-tmpl.json: |
    {
      "Name": "",
      "Pipe": {
        "Name": "logrange.pipe=__default__"
      },
      "Sink": {
        "Type": "syslog",
        "Params": {
          "Protocol": "tcp",
          "RemoteAddr": "",
          "TlsCAFile": "",
          "MessageSchema" : {
            "Facility": "local6",
            "Severity": "info",
            "Hostname": "lr-forwarder",
            "Tags": "{vars:pod}_{vars:ns}_{vars:cname}-{vars:cid}.log",
            "Msg": "{{\"time\":\"{ts.format(2006-01-02T15:04:05.999999Z07:00)}\"}, \"stream\":\"{vars:stream}\", \"log\":{msg.json()}{}"
          }
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-collector
  namespace: kube-system
  labels:
    app: log-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-collector
  template:
    metadata:
      labels:
        app: log-collector
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      priorityClassName: system-cluster-critical
      securityContext:
        runAsUser: -1
        seLinuxOptions:
          type: gravity_container_logger_t
      nodeSelector:
        gravitational.io/k8s-role: master
      tolerations:
      # tolerate any taints
      - operator: "Exists"
      containers:
        - name: log-collector
          image: log-adapter:0.1.0
          imagePullPolicy: Always
          ports:
            - name: api
              protocol: TCP
              containerPort: 8083
          volumeMounts:
            - name: config
              mountPath: /opt/logrange/gravity/config
            - name: varstate
              mountPath: /var/state
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 500Mi
              cpu: 500m
      volumes:
        - name: config
          configMap:
            name: log-collector
        - name: varstate
          hostPath:
            path: /var/state
